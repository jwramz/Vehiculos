@model AIVA.Web.ViewModels.ClienteViewModel


<div class="container-fluid">
    <div class="row mb-2">
        <div class="col-sm-6">
            <h1>Cliente</h1>
        </div>
        <div class="col-sm-6">
            <ol class="breadcrumb float-sm-right">
                <li class="breadcrumb-item active">Listado de clientes</li>
                <li class="breadcrumb-item active">Editar registro</li>
            </ol>
        </div>
    </div>
</div>


<div class="card card-secondary">
    <div class="card-header">
        <h3 class="card-title">Datos del cliente</h3>
    </div>
    <!-- /.card-header -->
    <div class="card-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <form>
                @Html.ValidationSummary(false)
                @Html.HiddenFor(model => model.id, new { id = "idCliente" })
                <div class="form-group row">
                    <label class="control-label col-md-4">Nombre</label>
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nombre)
                    </div>
                </div>

                <div class="form-group row ">
                    <label class="control-label col-md-4">Teléfono</label>
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Telefono)
                    </div>
                </div>

                <div class="form-group row ">
                    <label class="control-label col-md-4">Razón social</label>
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.RazonSocial, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.RazonSocial)
                    </div>
                </div>

                <div class="form-group row ">
                    <label class="control-label col-md-4">RFC</label>
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.RFC, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.RFC)
                    </div>
                </div>

                <div class="form-group row ">
                    <label class="control-label col-md-4">Domicilio</label>
                    <div class="col-md-4">
                        @Html.TextBoxFor(model => model.Domicilio, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Domicilio)
                    </div>
                </div>

                <div class="form-group row ">
                    <label class="control-label col-md-4">Colonia</label>
                    <div class="col-md-4">
                        @Html.TextBoxFor(model => model.Colonia, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Colonia)
                    </div>
                </div>

                <div class="form-group row">
                    <label class="control-label col-md-4">Estado</label>
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.idEstado, Model.listaEstados, "Seleccione...", new { @class = "form-control", @onchange = "ObtenerMunicipios();" })
                        @Html.ValidationMessageFor(model => model.idEstado)
                    </div>
                </div>

                <div class="form-group row">
                    <label class="control-label col-md-4">Municipio</label>
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.idMunicipio, Model.listaMunicipios, "Seleccione...", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.idMunicipio)
                    </div>
                </div>

                <div class="form-group row ">
                    <label class="control-label col-md-4">Código postal</label>
                    <div class="col-md-4">
                        @Html.TextBoxFor(model => model.CodigoPostal, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CodigoPostal)
                    </div>
                </div>

                <div class="form-group row ">
                    <label class="control-label col-md-4">Horario por defecto</label>
                    <div class="col-md-4">
                        @Html.TextBoxFor(model => model.Horario, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Horario)
                    </div>
                </div>

                <div class="form-group row ">
                    <label class="control-label col-md-4">% de ISR</label>
                    <div class="col-md-4">
                        @Html.TextBoxFor(model => model.ISR, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ISR)
                    </div>
                </div>

                <div class="form-group row ">
                    <label class="control-label col-md-4">% de retención de IVA</label>
                    <div class="col-md-4">
                        @Html.TextBoxFor(model => model.IVA, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.IVA)
                    </div>
                </div>

                <br />

                <div class="form-group row">
                    <div class="offset-4 col-md-8">
                        <input type="submit" value="Guardar" class="btn btn-success" />
                        @Html.ActionLink("Cancelar", "Index", new { }, new { @class = "btn btn-primary" })
                    </div>
                </div>
            </form>
        }

    </div>
    <!-- /.card-body -->
</div>



@section Styles {

}

@section Scripts {

    <script type="text/javascript">

        const $listaMunicipios = $("#idMunicipio");

        function LimpiarDropDownList(dropDownList) {
            dropDownList.empty();
            dropDownList.append('<option value"0">Seleccione...</option>');
        }

        //Funcion para obtener el valor del dropdownlist de propietario y enviarlo para poder llenar otro dropdwonlist nivel2
        function ObtenerMunicipios() {
            
            LimpiarDropDownList($listaMunicipios);
            var valor = $("#idEstado").val();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetMunicipios", "Cliente")',
                dataType: 'json',
                data: { valor },
                success: function (Data) {
                    $.each(Data.data, function (i, data) {
                        $listaMunicipios.append('<option value="' + data.value + '">' + data.text + '</option>');
                    });
                },
                error: function (error) {
                    alert('error')
                }
            })
        }


    </script>

}



